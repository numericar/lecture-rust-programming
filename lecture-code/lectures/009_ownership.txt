Garbage Collector (GC) 
    คือโปรแกรมที่ทำหน้าที่จัดสรรและคืนหน่วยความจำ โดยภาษาที่มี GC นักพัฒนาไม่จำเป็นต้องจัดการคืนหน่วยความจำ
    ด้วยตัวเองหลังจากใช้งานเสร็จ เพื่อป้องกันปัญหา memory leak (การสูญเสียหน่วยความจำโดยไม่จำเป็น)

rust ไม่มีระบบ GC แต่ใช้กลไกที่เรียกว่า Ownership ซึ่งเป็นคุณสมบัติเฉพาะของ rust ช่วยรับประกันความ
ปลอดภัยของหน่วยความจำโดยไม่ต้องพึ่งพา GC 
โดยจะมีแนวติดดังนี้
    - แต่ละค่าจะมีตัวแปรหนึ่งตัวที่เป็นเจ้าของ (owner)
    - ค่าหนึ่งค่า สามารถมีได้เพียง 1 owner ในเวลาใดเวลาหนึ่ง
    - เมื่อ owner นั้นหลุดออกจาก scope ค่านั้นจะถูกกำจัด

โดยเมื่อรวมกับกฏการยืมหน่วยความจำ (borrowing rules) ระบบนี้จะช่วยป้องกันปัญหาต่าง ๆ เช่น
    - dangling pointers     พอยน์เตอร์ชี้ไปยังหน่วยความจำที่ไม่ได้ใช้งานแล้ว
    - data races            การเข้าถึงข้อมูลพร้อมกันโดยไม่ปลอดภัย

ระบบ ownership, borrowing, reference เป็นกลไกหลักที่จัดการกับหน่วยความจำ (memory) เพื่อให้มั่นใจว่า
ระบบจะปลอดภัยจากปัญหาต่าง ๆ เช่น null pointer, data faces โดยไม่จำเป็นจะต้องใช้ garbage collector

Ownership
    ทุกค่าจะมีเจ้าของเดียว และเมื่อเจ้าของนั้นสิ้นสุด scope การทำงาน หน่วยความจำที่จัดสรรไว้สำหรับค่าดังกล่าวจะถูก
    ปล่อยทันที (freed) โดยอัตโนมัติ นี่คือหลักการของ ownership

    กฏพื้นฐานของ ownership
        1. ในแต่ละช่วงเวลาจะมี "เจ้าของ" สำหรับค่าค่าหนึ่งได้เพียงตัวเดียว
        2. เมื่อเจ้าของถูกย้าย (moved) ค่าเดิมจะไม่สามารถใช้งานได้อีก
        3. เมื่อ scope ของเจ้าของหมด หน่วยความจำจะถูกปล่อยทันที