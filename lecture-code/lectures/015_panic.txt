panic
    เป็นวิธีการจัดการกับข้อผิดพลาด ที่ไม่สามารถกู้คืนได้ เช่น เมื่อเกิดข้อผิดพลาดร้ายแรงที่ไม่สามารถดำเนินการต่อได้
    โปรแกรมจะหยุดทำงานและแสดงข้อผิดพลากและ tract stack

    เช่น 
        let v = vec![1, 2, 3];
        println!("{}", v[99]);
    จากตัวอย่างจะเกิด panic เนื่องจากโปรแกรมพยายามเข้าถึง index ที่ไม่มีอยู่จริง เกิดขอบเขตของ vector

    ** ควรหลีกเลี่ยงการใช้งาน paic! ถ้าเราสามารถจัดกการกับข้อผิดพลาดเองได้ เพราะ rust ต้องการให้โปรแกรม
    จัดการกับข้อผิดพลาดด้วย Result เพื่อให้โปรแกรมมีความทนทานต่อข้อผิดพลาดที่อาจเกิดขึ้นได้

    สรุป
        - Result<T, E> ใช้จัดการกับข้อผิดพลาดที่สามารถคาดการณ์ได้
        - panic! ใช้กรณีที่เกิดข้อผิดพลาด จนโปรแกรมไม่ควรจะทำงานต่อ เช่น ไม่มี connection ของฐานข้อมูล

    